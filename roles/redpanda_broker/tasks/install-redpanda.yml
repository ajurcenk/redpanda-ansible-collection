---
- name: Download and import Redpanda GPG Key
  shell: |
    curl -1sLf "{{ rp_key_deb }}" | gpg --dearmor > {{ rp_key_path_deb }}

- name:  Add Redpanda repository
  apt_repository:
    filename: "redpanda-redpanda"
    mode: 0644
    repo:  "deb [signed-by=/usr/share/keyrings/redpanda-redpanda-archive-keyring.gpg] https://dl.redpanda.com/public/redpanda/deb/{{ansible_distribution | lower}} {{ ansible_distribution_release | lower }} main"
    update_cache: yes
  when: ansible_os_family == 'Debian'

- name: Add Redpanda repository (source)
  apt_repository:
    filename: "redpanda-redpanda-src"
    mode: 0644
    repo: "deb-src [signed-by=/usr/share/keyrings/redpanda-redpanda-archive-keyring.gpg] https://dl.redpanda.com/public/redpanda/deb/{{ansible_distribution | lower}} {{ ansible_distribution_release | lower }} main"
    update_cache: yes
  when: ansible_os_family == 'Debian'

- name: Install Debian prerequisites
  package:
    name: "{{ debian_prerequisite_packages }}"
    state: present
    update_cache: yes
  when: ansible_os_family == 'Debian'

- name: Install GPG key (RedHat)
  ansible.builtin.rpm_key:
    state: present
    key: "{{ rp_key_rpm }}"
  when: ansible_os_family == 'RedHat'

- name: Install prerequisite packages
  package:
    name: "{{ rpm_prerequisite_packages }}"
    state: present
    update_cache: yes
  when: ansible_os_family == 'RedHat'


- name: Set fact based on OS family
  set_fact:
    conf_url: "{{ rp_config_url_deb if ansible_os_family == 'Debian' else rp_config_url_rpm }}"

- name: Set conf location based on OS family
  set_fact:
    conf_dest: "{{ rp_conf_loc_deb if ansible_os_family == 'Debian' else rp_conf_loc_rpm }}"

- name: Fetch Redpanda configuration
  uri:
    url: "{{ (conf_url ~ '?distro=' ~ ansible_distribution ~ '&codename=' ~ ansible_distribution_release ~ '&version=' ~ ansible_distribution_version ~ '&arch=' ~ ansible_architecture) | replace(' ', '%20') | lower }}"
    dest: "{{ conf_dest }}"
    return_content: yes
    follow_redirects: all
    force: yes
  register: redpanda_config_result

- name: Install redpanda from repository
  ansible.builtin.package:
    name:
      - redpanda{{ '' if redpanda_version=='latest' else '=' + redpanda_version }}
    state: "{{ redpanda_install_status }}"
    update_cache: true
  register: package_result
  when: ansible_os_family == 'Debian'

- name: Install redpanda from repository
  ansible.builtin.package:
    name:
      - redpanda{{ '' if redpanda_version=='latest' else '-' + redpanda_version }}
    state: "{{ redpanda_install_status }}"
    update_cache: true
  register: package_result
  when: ansible_os_family == 'RedHat'

- name: Set data dir file perms
  ansible.builtin.file:
    path: "{{ redpanda_data_directory }}"
    owner: redpanda
    group: redpanda
