---
- name: Load OS-specific variables
  ansible.builtin.include_vars: '{{ item }}'
  with_first_found:
    - ../vars/{{ ansible_os_family }}.yml
    - ../vars/{{ ansible_distribution_release }}.yml
    - ../vars/empty.yml
  tags:
    - kafka_connect

- name: Red Hat Repo Setup and Java Installation
  include_tasks: redhat.yml
  when: ansible_os_family == "RedHat"
  tags:
  - kafka_connect

- name: Ubuntu Repo Setup and Java Installation
  include_tasks: ubuntu.yml
  when: ansible_distribution == "Ubuntu"

- name: Debian Repo Setup and Java Installation
  include_tasks: debian.yml
  when: ansible_distribution == "Debian"

- name: Create kafka group
  ansible.builtin.group:
    name: '{{ kafka_connect_group }}'
    state: present
    system: yes
  when: kafka_create_user_group | bool
  tags:
    - kafka_connect_user_group
    - kaka_connect

- name: Create kafka user
  ansible.builtin.user:
    name: '{{ kafka_connect_user }}'
    group: '{{ kafka_connect_group }}'
    state: present
    createhome: no
    system: yes
  when: kafka_create_user_group | bool
  tags:
    - kafka_connect_user
    - kaka_connect

- name: Check if Kafka has already been downloaded and unpacked
  ansible.builtin.stat:
    path: '{{ kafka_dir }}_{{ kafka_scala_version }}-{{ kafka_version }}'
  register: dir

# TODO Create Kafka download folder

- name: Download Apache Kafka
  ansible.builtin.get_url:
    url: '{{ kafka_download_base_url }}/{{ kafka_version }}/kafka_{{ kafka_scala_version }}-{{ kafka_version }}.tgz'
    dest: /tmp
    validate_certs: '{{ kafka_download_validate_certs }}'
    mode: 0644
  when: not dir.stat.exists
  tags:
    - kafka_download
    - kaka_connect

- name: Unpack Apache Kafka
  ansible.builtin.unarchive:
    src: /tmp/kafka_{{ kafka_scala_version }}-{{ kafka_version }}.tgz
    dest: '{{ kafka_root_dir }}'
    copy: no
    group: '{{ kafka_connect_group }}'
    owner: '{{ kafka_connect_user }}'
  when: not dir.stat.exists
  tags:
    - kafka_unpack
    - kaka_connect  

- name: Create symlink to kafka installation directory
  ansible.builtin.file:
    src: '{{ kafka_root_dir }}/kafka_{{ kafka_scala_version }}-{{ kafka_version }}'
    dest: '{{ kafka_dir }}'
    state: link
    group: '{{ kafka_connect_group }}'
    owner: '{{ kafka_connect_user }}'
  tags:
    - kafka_dirs
    - kaka_connect

- name: Create directory for kafka application logs
  ansible.builtin.file:
    path: '{{ kafka_log_dir }}'
    state: directory
    group: '{{ kafka_connect_group }}'
    owner: '{{ kafka_connect_user }}'
    mode: 0755
  tags:
    - kafka_dirs
    - kaka_connect 

- name: Register directory status for application log files
  ansible.builtin.stat:
    path: '{{ kafka_dir }}/logs'
  register: application_logs_dir
  tags:
    - kafka_dirs
    - kaka_connect

- name: Create symlink to application log directory
  ansible.builtin.file:
    src: '{{ kafka_log_dir }}'
    dest: '{{ kafka_dir }}/logs'
    state: link
    group: '{{ kafka_connect_group }}'
    owner: '{{ kafka_connect_user }}'
    mode: 0755
    follow: no
  when: not application_logs_dir.stat.exists
  tags:
    - kafka_dirs
    - kaka_connect

- name: Template configuration file to connect-distributed.properties
  ansible.builtin.template:
    src: connect-distributed.properties.j2
    dest: '{{ kafka_dir }}/config/connect-distributed.properties'
    group: '{{ kafka_connect_group }}'
    owner: '{{ kafka_connect_user }}'
    mode: 0644
  tags:
    - kafka_config 
    - kaka_connect