
###########################  OS level setup #############################

systemd_base_dir: "{{'/lib/systemd/system' if ansible_os_family == 'Debian' else '/usr/lib/systemd/system'}}"

###########################  JAVA setup #############################

### Java installation flag
install_java: true

### Java Package to install on RHEL/Centos hosts. Possible values java-8-openjdk, java-11-openjdk or java-17-openjdk
redhat_java_package_name: java-17-openjdk

### Java Package to install on Debian hosts. Possible values openjdk-11-jdk, openjdk-8-jdk or openjdk-17-jdk
debian_java_package_name: openjdk-17-jdk

### Java Package to install on Ubuntu hosts. Possible values openjdk-8-jdk, openjdk-11-jdk or openjdk-17-jdk
ubuntu_java_package_name: openjdk-17-jdk

########################### Kafka #############################

kafka_download_base_url: https://downloads.apache.org/kafka
kafka_download_validate_certs: yes
kafka_version: 3.5.2
kafka_scala_version: 2.13

# The kafka user and group to create files/dirs with and for running the kafka service
kafka_create_user_group: true
kafka_user: kafka
kafka_group: kafka

kafka_root_dir: /opt
kafka_dir: "{{ kafka_root_dir }}/kafka"

# The application log folder (e.g: server.log)
kafka_log_dir: /var/log/kafka

# Start kafka after installation
kafka_start: yes
# Restart kafka on configuration change
kafka_restart: yes

########################### Kafka Connect #############################

### Set this variable to customize the Linux User that the Kafka Connect Service runs with. Default user is cp-kafka-connect.
kafka_connect_user: "{{kafka_user}}"

### Set this variable to customize the Linux Group that the Kafka Connect Service user belongs to. Default group is confluent.
kafka_connect_group: "{{kafka_group}}"

### Config/Properties Filename to use when setting up and configuring Kafka Connect
kafka_connect_config_filename: connect-distributed.properties


# TODO Use Redpanda advertised listeners or custom
kafka_connect_bootstrap_servers: "localhost:9092"
kafka_connect_group_id: connect-cluster
kafka_connect_key_converter: org.apache.kafka.connect.json.JsonConverter
kafka_connect_value_converter: org.apache.kafka.connect.json.JsonConverter
kafka_connect_key_converter_schemas_enable: true
kafka_connect_value_converter_schemas_enable: true
kafka_connect_internal_key_converter: org.apache.kafka.connect.json.JsonConverter
kafka_connect_internal_value_converter: org.apache.kafka.connect.json.JsonConverter
kafka_connect_internal_key_converter_schemas_enable: false
kafka_connect_internal_value_converter_schemas_enable: false

### TODO Change to check RP nodes count
kafka_connect_offset_storage_replication_factor: 1
kafka_connect_config_storage_replication_factor: 1
kafka_connect_status_storage_replication_factor: 1

kafka_connect_offset_flush_interval_ms: 10000
kafka_connect_plugin_path: /usr/local/share/java,/usr/local/share/kafka/plugins,/opt/connectors

### Root logger within Kafka Connect's log4j config. Only honored if kafka_connect_custom_log4j: true
kafka_connect_log4j_root_logger: "INFO, stdout, connectAppender, redactor"

### Max number of log files generated by Kafka Connect. Only honored if kafka_connect_custom_log4j: true
kafka_connect_max_log_files: 10

### Max size of a log file generated by Kafka Connect. Only honored if kafka_connect_custom_log4j: true
kafka_connect_log_file_size: 100MB

kafka_connect_java_args:

### Custom Java Args to add to the Connect Process
kafka_connect_custom_java_args: ""

kafka_connect_final_java_args: "{{ kafka_connect_java_args + [ kafka_connect_custom_java_args ] }}"


kafka_connect:
  server_start_file: "{{ kafka_dir }}/bin/connect-distributed"
  systemd_file: "{{systemd_base_dir}}/{{kafka_connect_service_name}}.service"
  config_file: "{{ (config_base_path, kafka_connect_config_prefix_path, kafka_connect_config_filename) | path_join }}"


kafka_connect_service_overrides:
  LimitNOFILE: 100000
  User: "{{ kafka_connect_user }}"
  Group: "{{ kafka_connect_group }}"
  ExecStart: "{{ kafka_connect.server_start_file }} "

